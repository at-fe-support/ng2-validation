{"version":3,"file":"uuid.js","sourceRoot":"","sources":["../../src/directives/uuid.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAqD,eAAe,CAAC,CAAA;AACrE,sBAAuE,gBAAgB,CAAC,CAAA;AAExF,sBAAiC,UAAU,CAAC,CAAA;AAE5C,IAAM,cAAc,GAAQ;IACxB,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,aAAa,EAAb,CAAa,CAAC;IAC5C,KAAK,EAAE,IAAI;CACd,CAAC;AAMF;IAAA;IAYA,CAAC;IAPG,gCAAQ,GAAR;QACI,IAAI,CAAC,SAAS,GAAG,wBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,gCAAQ,GAAR,UAAS,CAAkB;QACvB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAVD;QAAC,YAAK,EAAE;;+CAAA;IALZ;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,6DAA6D;YACvE,SAAS,EAAE,CAAC,cAAc,CAAC;SAC9B,CAAC;;qBAAA;IAaF,oBAAC;AAAD,CAAC,AAZD,IAYC;AAZY,qBAAa,gBAYzB,CAAA","sourcesContent":["import { Directive, Input, forwardRef, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nimport { CustomValidators } from '../index';\r\n\r\nconst UUID_VALIDATOR: any = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => UUIDValidator),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[uuid][formControlName],[uuid][formControl],[uuid][ngModel]',\r\n    providers: [UUID_VALIDATOR]\r\n})\r\nexport class UUIDValidator implements Validator, OnInit {\r\n    @Input() uuid;\r\n\r\n    private validator: ValidatorFn;\r\n\r\n    ngOnInit() {\r\n        this.validator = CustomValidators.uuid(this.uuid);\r\n    }\r\n\r\n    validate(c: AbstractControl): {[key: string]: any} {\r\n        return this.validator(c);\r\n    }\r\n}\r\n"]}