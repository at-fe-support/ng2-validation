{"version":3,"file":"min.js","sourceRoot":"","sources":["../../src/directives/min.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAqD,eAAe,CAAC,CAAA;AACrE,sBAAuE,gBAAgB,CAAC,CAAA;AAExF,sBAAiC,UAAU,CAAC,CAAA;AAE5C,IAAM,aAAa,GAAQ;IACvB,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,YAAY,EAAZ,CAAY,CAAC;IAC3C,KAAK,EAAE,IAAI;CACd,CAAC;AAMF;IAAA;IAYA,CAAC;IAPG,+BAAQ,GAAR;QACI,IAAI,CAAC,SAAS,GAAG,wBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACpD,CAAC;IAED,+BAAQ,GAAR,UAAS,CAAkB;QACvB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAVD;QAAC,YAAK,EAAE;;6CAAA;IALZ;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,0DAA0D;YACpE,SAAS,EAAE,CAAC,aAAa,CAAC;SAC7B,CAAC;;oBAAA;IAaF,mBAAC;AAAD,CAAC,AAZD,IAYC;AAZY,oBAAY,eAYxB,CAAA","sourcesContent":["import { Directive, Input, forwardRef, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nimport { CustomValidators } from '../index';\r\n\r\nconst MIN_VALIDATOR: any = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => MinValidator),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\r\n    providers: [MIN_VALIDATOR]\r\n})\r\nexport class MinValidator implements Validator, OnInit {\r\n    @Input() min: number;\r\n\r\n    private validator: ValidatorFn;\r\n\r\n    ngOnInit() {\r\n        this.validator = CustomValidators.min(this.min);\r\n    }\r\n\r\n    validate(c: AbstractControl): {[key: string]: any} {\r\n        return this.validator(c);\r\n    }\r\n}\r\n"]}